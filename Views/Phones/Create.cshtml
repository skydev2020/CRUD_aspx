@model EF_CRUD.Models.Phone

@{
    ViewBag.Title = "Create Phone";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    var valid = false;

    function validate_fileupload(input_element) {
        var el = document.getElementById("ValidationMessage");
        var fileName = input_element.value;
        var allowed_extensions = new Array("jpg", "png", "gif");
        var file_extension = fileName.split('.').pop();
        for (var i = 0; i < allowed_extensions.length; i++) {
            if (allowed_extensions[i] == file_extension) {
                valid = true; // valid file extension
                el.innerHTML = "";
                return;
            }
        }
        el.innerHTML = "Invalid file";
        valid = false;
    }

    function valid_form() {
        // Check For Image Upload
        if (document.getElementById("ImageName").value != "") {
            valid = true;
        }
        if (!valid) {
            document.getElementById("ValidationMessage").innerHTML = "Please Select an Image";
        }

        return valid;
    }
</script>

<h2>Create Phone</h2>

@using (Html.BeginForm("Create", "Phones", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control", autofocus = "true" } })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="imageFile" accept=".jpg,.png,.bmp" onchange="validate_fileupload(this);" />
                @Html.HiddenFor(model => model.ImageName)
                <div id="ValidationMessage" class="text-danger"></div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" onclick="return valid_form()" />
                <input type="button" value="Cancel" class="btn btn-default" onclick="@("window.location.href='" + @Url.Action("Index", "Phones") + "'");" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
